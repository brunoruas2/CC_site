"use strict";(self.webpackChunkciencia_computacao=self.webpackChunkciencia_computacao||[]).push([[1392],{6055:(e,o,a)=>{a.r(o),a.d(o,{assets:()=>t,contentTitle:()=>d,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"puc/primeiro-periodo/algoritmo-logica","title":"Algoritmos e L\xf3gica","description":"","source":"@site/docs/02-puc/02-primeiro-periodo/02-algoritmo-logica.md","sourceDirName":"02-puc/02-primeiro-periodo","slug":"/puc/primeiro-periodo/algoritmo-logica","permalink":"/CC_site/docs/puc/primeiro-periodo/algoritmo-logica","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Algoritmos e L\xf3gica","description":""},"sidebar":"tutorialSidebar","previous":{"title":"Algoritmo e Abstra\xe7\xe3o de Dados","permalink":"/CC_site/docs/puc/primeiro-periodo/algoritmo-abstracao"},"next":{"title":"Desenvolvimento Web Frontend","permalink":"/CC_site/docs/puc/primeiro-periodo/desenvolvimento-frontend"}}');var n=a(4848),r=a(8453);const i={sidebar_position:2,title:"Algoritmos e L\xf3gica",description:""},d="Algoritmos e L\xf3gica de Programa\xe7\xe3o",t={},l=[{value:"L\xf3gica de Programa\xe7\xe3o e Estrutura de Controle, Fun\xe7\xf5es e Procedimentos",id:"l\xf3gica-de-programa\xe7\xe3o-e-estrutura-de-controle-fun\xe7\xf5es-e-procedimentos",level:2},{value:"Conceito de Algoritmo",id:"conceito-de-algoritmo",level:3},{value:"Vari\xe1veis",id:"vari\xe1veis",level:3},{value:"Declara\xe7\xe3o de Vari\xe1veis em c#",id:"declara\xe7\xe3o-de-vari\xe1veis-em-c",level:4},{value:"Etapas de um Algoritmo e Operador de Atribui\xe7\xe3o",id:"etapas-de-um-algoritmo-e-operador-de-atribui\xe7\xe3o",level:3},{value:"Operador de Atribui\xe7\xe3o",id:"operador-de-atribui\xe7\xe3o",level:4},{value:"Sa\xeddas de Dados",id:"sa\xeddas-de-dados",level:5},{value:"Entrada de Dados",id:"entrada-de-dados",level:5},{value:"Estrutura Sequencial",id:"estrutura-sequencial",level:3},{value:"Operadores e Fun\xe7\xf5es Aritm\xe9ticas",id:"operadores-e-fun\xe7\xf5es-aritm\xe9ticas",level:4},{value:"Express\xf5es Aritm\xe9ticas",id:"express\xf5es-aritm\xe9ticas",level:4},{value:"Estrutura Condicional",id:"estrutura-condicional",level:3},{value:"Operadores Relacionais",id:"operadores-relacionais",level:4},{value:"Condi\xe7\xe3o Simples e Composta",id:"condi\xe7\xe3o-simples-e-composta",level:4},{value:"Operadores Booleanos e Comandos IF Aninhados",id:"operadores-booleanos-e-comandos-if-aninhados",level:4},{value:"O Comando Switch e o Operador Tern\xe1rio",id:"o-comando-switch-e-o-operador-tern\xe1rio",level:4},{value:"Estrutura de Repeti\xe7\xe3o",id:"estrutura-de-repeti\xe7\xe3o",level:3},{value:"Os Comandos WHILE, DO WHILE e FOR",id:"os-comandos-while-do-while-e-for",level:4},{value:"Repeti\xe7\xe3o usando WHILE",id:"repeti\xe7\xe3o-usando-while",level:5},{value:"Repeti\xe7\xe3o usando DO-WHILE",id:"repeti\xe7\xe3o-usando-do-while",level:5},{value:"Repeti\xe7\xe3o usando FOR",id:"repeti\xe7\xe3o-usando-for",level:5},{value:"Contadores e Acumuladores",id:"contadores-e-acumuladores",level:4},{value:"Manipula\xe7\xe3o de Dados em Mem\xf3ria Prim\xe1ria e Secund\xe1ria",id:"manipula\xe7\xe3o-de-dados-em-mem\xf3ria-prim\xe1ria-e-secund\xe1ria",level:2},{value:"Criando e Usando Fun\xe7\xf5es e Procedimentos",id:"criando-e-usando-fun\xe7\xf5es-e-procedimentos",level:3},{value:"Passagem de Par\xe2metros",id:"passagem-de-par\xe2metros",level:3},{value:"Dicas e Boas Pr\xe1ticas",id:"dicas-e-boas-pr\xe1ticas",level:5},{value:"Manipula\xe7\xe3o de Arquivos em C#",id:"manipula\xe7\xe3o-de-arquivos-em-c",level:3},{value:"Abrir um arquivo para leitura",id:"abrir-um-arquivo-para-leitura",level:5},{value:"Abrir um arquivo para escrita",id:"abrir-um-arquivo-para-escrita",level:5},{value:"Fechando um Arquivo",id:"fechando-um-arquivo",level:5},{value:"Bibliografia",id:"bibliografia",level:2}];function c(e){const o={a:"a",admonition:"admonition",annotation:"annotation",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",img:"img",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msup:"msup",ol:"ol",p:"p",pre:"pre",section:"section",semantics:"semantics",span:"span",strong:"strong",sup:"sup",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.header,{children:(0,n.jsx)(o.h1,{id:"algoritmos-e-l\xf3gica-de-programa\xe7\xe3o",children:"Algoritmos e L\xf3gica de Programa\xe7\xe3o"})}),"\n",(0,n.jsx)(o.h2,{id:"l\xf3gica-de-programa\xe7\xe3o-e-estrutura-de-controle-fun\xe7\xf5es-e-procedimentos",children:"L\xf3gica de Programa\xe7\xe3o e Estrutura de Controle, Fun\xe7\xf5es e Procedimentos"}),"\n",(0,n.jsx)(o.h3,{id:"conceito-de-algoritmo",children:"Conceito de Algoritmo"}),"\n",(0,n.jsx)(o.p,{children:"Em resumo, um algoritmo \xe9 uma sequ\xeancia de ordens que, se seguidas, deve gerar um resultado previsto e desejado. N\xe3o vale muito a pena aprofundar al\xe9m disso agora."}),"\n",(0,n.jsx)(o.h3,{id:"vari\xe1veis",children:"Vari\xe1veis"}),"\n",(0,n.jsx)(o.p,{children:"Uma vari\xe1vel \xe9 uma posi\xe7\xe3o na mem\xf3ria do computador. Isso mesmo, \xe9 algo com endere\xe7o definido, nada solto no universo ou obscuro dentro da m\xe1quina. Esse dado \xe9 gravado para posterior leitura por parte do programa que est\xe1 sendo executado."}),"\n",(0,n.jsx)(o.p,{children:"Podemos ter como origem do dado o pr\xf3prio programa que est\xe1 sendo executado ou o usu\xe1rio por meio da entrada de dados ou, ainda, a leitura de dados previamente armazenados na mem\xf3ria do computador."}),"\n",(0,n.jsx)(o.p,{children:"Cada vari\xe1vel possui v\xe1rios tipos de atributos que podemos elencar na lista abaixo:"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:"Tem um endere\xe7o na mem\xf3ria"}),"\n",(0,n.jsx)(o.li,{children:"Possui um nome de identifica\xe7\xe3o"}),"\n",(0,n.jsx)(o.li,{children:"Armazena um valor"}),"\n",(0,n.jsxs)(o.li,{children:["Possui um tipo de dados:","\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"Num\xe9rico"})," - Inteiros e Reais (Double ou Ponto Flutuante)",(0,n.jsx)(o.sup,{children:(0,n.jsx)(o.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"N\xe3o num\xe9rico"})," - L\xf3gico e Caractere"]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.strong,{children:"Arranjos"})," - Vetores e Matrizes"]}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.strong,{children:"Arquivos"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.strong,{children:"etc"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(o.p,{children:["O endere\xe7o da mem\xf3ria \xe9 feita pelos endere\xe7os que possuem apenas 2 est\xe1gios de registro: 0 ou 1. Um bit \xe9 exatamente essa medida de registo. 1 byte \xe9 composto de 8bits. 1 kilobyte cont\xe9m 1024bytes (",(0,n.jsxs)(o.span,{className:"katex",children:[(0,n.jsx)(o.span,{className:"katex-mathml",children:(0,n.jsx)(o.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(o.semantics,{children:[(0,n.jsx)(o.mrow,{children:(0,n.jsxs)(o.msup,{children:[(0,n.jsx)(o.mn,{children:"2"}),(0,n.jsx)(o.mn,{children:"10"})]})}),(0,n.jsx)(o.annotation,{encoding:"application/x-tex",children:"2^{10}"})]})})}),(0,n.jsx)(o.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(o.span,{className:"base",children:[(0,n.jsx)(o.span,{className:"strut",style:{height:"0.8141em"}}),(0,n.jsxs)(o.span,{className:"mord",children:[(0,n.jsx)(o.span,{className:"mord",children:"2"}),(0,n.jsx)(o.span,{className:"msupsub",children:(0,n.jsx)(o.span,{className:"vlist-t",children:(0,n.jsx)(o.span,{className:"vlist-r",children:(0,n.jsx)(o.span,{className:"vlist",style:{height:"0.8141em"},children:(0,n.jsxs)(o.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,n.jsx)(o.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(o.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(o.span,{className:"mord mtight",children:(0,n.jsx)(o.span,{className:"mord mtight",children:"10"})})})]})})})})})]})]})})]}),"). 1 megabyte cont\xe9m 1024KB (",(0,n.jsxs)(o.span,{className:"katex",children:[(0,n.jsx)(o.span,{className:"katex-mathml",children:(0,n.jsx)(o.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(o.semantics,{children:[(0,n.jsx)(o.mrow,{children:(0,n.jsxs)(o.msup,{children:[(0,n.jsx)(o.mn,{children:"2"}),(0,n.jsx)(o.mn,{children:"20"})]})}),(0,n.jsx)(o.annotation,{encoding:"application/x-tex",children:"2^{20}"})]})})}),(0,n.jsx)(o.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(o.span,{className:"base",children:[(0,n.jsx)(o.span,{className:"strut",style:{height:"0.8141em"}}),(0,n.jsxs)(o.span,{className:"mord",children:[(0,n.jsx)(o.span,{className:"mord",children:"2"}),(0,n.jsx)(o.span,{className:"msupsub",children:(0,n.jsx)(o.span,{className:"vlist-t",children:(0,n.jsx)(o.span,{className:"vlist-r",children:(0,n.jsx)(o.span,{className:"vlist",style:{height:"0.8141em"},children:(0,n.jsxs)(o.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,n.jsx)(o.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(o.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(o.span,{className:"mord mtight",children:(0,n.jsx)(o.span,{className:"mord mtight",children:"20"})})})]})})})})})]})]})})]}),"). 1 gigabyte cont\xe9m 1024MB (",(0,n.jsxs)(o.span,{className:"katex",children:[(0,n.jsx)(o.span,{className:"katex-mathml",children:(0,n.jsx)(o.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(o.semantics,{children:[(0,n.jsx)(o.mrow,{children:(0,n.jsxs)(o.msup,{children:[(0,n.jsx)(o.mn,{children:"2"}),(0,n.jsx)(o.mn,{children:"30"})]})}),(0,n.jsx)(o.annotation,{encoding:"application/x-tex",children:"2^{30}"})]})})}),(0,n.jsx)(o.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(o.span,{className:"base",children:[(0,n.jsx)(o.span,{className:"strut",style:{height:"0.8141em"}}),(0,n.jsxs)(o.span,{className:"mord",children:[(0,n.jsx)(o.span,{className:"mord",children:"2"}),(0,n.jsx)(o.span,{className:"msupsub",children:(0,n.jsx)(o.span,{className:"vlist-t",children:(0,n.jsx)(o.span,{className:"vlist-r",children:(0,n.jsx)(o.span,{className:"vlist",style:{height:"0.8141em"},children:(0,n.jsxs)(o.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,n.jsx)(o.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(o.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(o.span,{className:"mord mtight",children:(0,n.jsx)(o.span,{className:"mord mtight",children:"30"})})})]})})})})})]})]})})]}),"). 1 terabyte possui 1024GB (",(0,n.jsxs)(o.span,{className:"katex",children:[(0,n.jsx)(o.span,{className:"katex-mathml",children:(0,n.jsx)(o.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(o.semantics,{children:[(0,n.jsx)(o.mrow,{children:(0,n.jsxs)(o.msup,{children:[(0,n.jsx)(o.mn,{children:"2"}),(0,n.jsx)(o.mn,{children:"40"})]})}),(0,n.jsx)(o.annotation,{encoding:"application/x-tex",children:"2^{40}"})]})})}),(0,n.jsx)(o.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(o.span,{className:"base",children:[(0,n.jsx)(o.span,{className:"strut",style:{height:"0.8141em"}}),(0,n.jsxs)(o.span,{className:"mord",children:[(0,n.jsx)(o.span,{className:"mord",children:"2"}),(0,n.jsx)(o.span,{className:"msupsub",children:(0,n.jsx)(o.span,{className:"vlist-t",children:(0,n.jsx)(o.span,{className:"vlist-r",children:(0,n.jsx)(o.span,{className:"vlist",style:{height:"0.8141em"},children:(0,n.jsxs)(o.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,n.jsx)(o.span,{className:"pstrut",style:{height:"2.7em"}}),(0,n.jsx)(o.span,{className:"sizing reset-size6 size3 mtight",children:(0,n.jsx)(o.span,{className:"mord mtight",children:(0,n.jsx)(o.span,{className:"mord mtight",children:"40"})})})]})})})})})]})]})})]}),")."]}),"\n",(0,n.jsxs)(o.p,{children:["Ou seja, se um computador possui 3 gigas de mem\xf3ria RAM, ele tem 3 bilh\xf5es de bytes como endere\xe7os dispon\xedveis para um registro na mem\xf3ria",(0,n.jsx)(o.sup,{children:(0,n.jsx)(o.a,{href:"#user-content-fn-2",id:"user-content-fnref-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"2"})}),". Cada byte possui um endere\xe7o \xfanico. Na mem\xf3ria RAM costuma-se usar a base Hexadecimal para definir os endere\xe7os. Vamos ver isso melhor na mat\xe9ria de Arquitetura de Computadores."]}),"\n",(0,n.jsx)(o.p,{children:"Tamb\xe9m vimos que as vari\xe1veis possuem identificadores. Em c# existem regras para a cria\xe7\xe3o dos identificadores:"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:"Devem come\xe7ar com uma letra"}),"\n",(0,n.jsx)(o.li,{children:"N\xe3o podem ter espa\xe7os"}),"\n",(0,n.jsx)(o.li,{children:"N\xe3o podem usar uma das palavras reservadas pela linguagem"}),"\n",(0,n.jsx)(o.li,{children:'\xc9 case sensitive, ou seja, o nome "Var" \xe9 diferente do nome "var"'}),"\n"]}),"\n",(0,n.jsx)(o.p,{children:"O identificador deve sempre ter algum sentido que permita a r\xe1pida interpreta\xe7\xe3o por parte de algum leitor do c\xf3digo fonte da aplica\xe7\xe3o. Isso \xe9 fundamental para manuten\xe7\xe3o de c\xf3digos produzidos por v\xe1rias pessoas diferentes. Entretanto, devemos evitar nomes de vari\xe1veis muito grandes. Na verdade, quanto menor o nome, mantido o sentido na leitura, melhor."}),"\n",(0,n.jsx)(o.p,{children:"Outra boa pr\xe1tica \xe9 usar o camelCase para vari\xe1veis com mais de uma palavra. Esse padr\xe3o \xe9 bem simples: primeira palavra em min\xfasculo e a segunda com a primeira letra em mai\xfascula."}),"\n",(0,n.jsx)(o.h4,{id:"declara\xe7\xe3o-de-vari\xe1veis-em-c",children:"Declara\xe7\xe3o de Vari\xe1veis em c#"}),"\n",(0,n.jsx)(o.p,{children:"Vamos aprender agora como declarar os 4 tipos mais simples de vari\xe1veis:"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"int"})," para definir inteiros"]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"double"})," ou ",(0,n.jsx)(o.code,{children:"float"})," para definir n\xfameros reais"]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"string"})," para cadeia de caracteres"]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"bool"})," para as vari\xe1veis booleanas (",(0,n.jsx)(o.code,{children:"true"})," ou ",(0,n.jsx)(o.code,{children:"false"}),")"]}),"\n"]}),"\n",(0,n.jsx)(o.admonition,{title:"Coment\xe1rio",type:"tip",children:(0,n.jsxs)(o.p,{children:['C# \xe9 uma linguagem fortemente tipada, entretanto, existe um tipo de tipagem impl\xedcita que \xe9 muito usado na pr\xe1tica onde o pr\xf3prio compilador "interpreta" o tipo de vari\xe1vel. Ao longo desse microfundamento n\xf3s vamos usar apenas os tokens de tipagem expl\xedcita. Mas vale muito a pena a leitura da documenta\xe7\xe3o oficial nesse ',(0,n.jsx)(o.a,{href:"https://learn.microsoft.com/pt-br/dotnet/csharp/language-reference/statements/declarations#implicitly-typed-local-variables",children:"link"}),"."]})}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"static void Main(string[] args) \n{\n  int idade, numero;\n  double peso, salario;\n  string nomePai, rua, dtNasc;\n  bool temCasa;\n} \n"})}),"\n",(0,n.jsx)(o.p,{children:"Nesse c\xf3digo acima temos a declara\xe7\xe3o de v\xe1rias vari\xe1veis de cada tipo. Basta colocar o tipo da vari\xe1vel seguido do nome de cada uma delas separadas por v\xedrgula."}),"\n",(0,n.jsx)(o.admonition,{title:"Coment\xe1rio",type:"tip",children:(0,n.jsxs)(o.p,{children:["Em c# todas as linhas precisam conter um car\xe1cter de encerramento que \xe9 o ponto e v\xedrgula ",(0,n.jsx)(o.code,{children:";"}),". Sem esse token, o computador vai interpretar a pr\xf3xima linha como sendo a continua\xe7\xe3o da anterior."]})}),"\n",(0,n.jsx)(o.h3,{id:"etapas-de-um-algoritmo-e-operador-de-atribui\xe7\xe3o",children:"Etapas de um Algoritmo e Operador de Atribui\xe7\xe3o"}),"\n",(0,n.jsx)(o.p,{children:"Podemos resumir um algoritmo simples como contendo apenas 3 etapas: 1) A entrada de dados; 2) O processamento e 3) A sa\xedda de dados."}),"\n",(0,n.jsxs)(o.p,{children:["Na etapa de processamento, podemos precisar de grande criatividade e esfor\xe7o para produzir a sa\xedda de dados desejada. Como ferramenta para alcance desse objetivo, temos as ",(0,n.jsx)(o.strong,{children:"estruturas b\xe1sicas"})," que s\xe3o:"]}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:"Estrutura Sequencial - Usada para garantir a ordem correta dos passos"}),"\n",(0,n.jsx)(o.li,{children:"Estrutura Condicional - Usada para permitir contexto ou cen\xe1rios"}),"\n",(0,n.jsx)(o.li,{children:"Estrutura de Repeti\xe7\xe3o - Usada para evitar repetir c\xf3digo sequencial"}),"\n"]}),"\n",(0,n.jsx)(o.h4,{id:"operador-de-atribui\xe7\xe3o",children:"Operador de Atribui\xe7\xe3o"}),"\n",(0,n.jsx)(o.p,{children:"Uma vez que j\xe1 sabemos como atribuir uma vari\xe1vel ao seu tipo, precisamos aprender a como atribuir um valor a essas vari\xe1veis. Em c# a atribui\xe7\xe3o de valor \xe9 feita do seguinte modo:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"idade = 28;\nnumero = 9992233;\n"})}),"\n",(0,n.jsx)(o.p,{children:"\xc9 poss\xedvel fazer 3 tipos de atribui\xe7\xe3o de valor para uma vari\xe1vel: Valor fixo; Conte\xfado de outra vari\xe1vel e Express\xe3o aritm\xe9tica ou booliana. Abaixo temos 3 exemplo disso."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"idade = 28; // Valor fixo\nnumero = idade; // Valor de outra vari\xe1vel\nidadeNum = idade + numero; // Valor por express\xe3o\nidadeEqNum = idade == numero; // Valor por express\xe3o booliana\n"})}),"\n",(0,n.jsx)(o.p,{children:"Nesse ponto vale uma reflex\xe3o. Ser\xe1 que sempre precisamos separar as etapas de atribui\xe7\xe3o do tipo de dados e do valor? Ou podemos, no mesmo momento, definir o tipo de dados e o valor da vari\xe1vel? A resposta, para nossa sorte, \xe9 que \xe9 poss\xedvel em c# atribui\xe7\xe3o de tipo e valor ao mesmo tempo. A sintaxe fica desse modo:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:'int idade = 28;\nint numero = idade;\ndouble = 2.3;\nstring nome = "bruno";\nint idadeNum = idade + numero;\nbool idadeEqNum = idade == numero;\n'})}),"\n",(0,n.jsx)(o.h5,{id:"sa\xeddas-de-dados",children:"Sa\xeddas de Dados"}),"\n",(0,n.jsx)(o.p,{children:"Agora que fizemos esse pequeno desvio no assunto, vamos retornar para as estruturas. Por incr\xedvel que pare\xe7a, \xe9 melhor a gente come\xe7ar pelo final. A etapa de sa\xedda de dados."}),"\n",(0,n.jsx)(o.p,{children:"Em c# temos duas maneiras de sa\xedda de dados:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"// Imprime a informa\xe7\xe3o e cursor fica na mesma linha\nConsole.Write('string');\n\n// Imprime a info mas o curso vai pra proxima linha\nConsole.WriteLine('string ' + var1 + ' string');\n"})}),"\n",(0,n.jsx)(o.p,{children:"Nesses exemplos a gente pode perceber que podemos concatenar textos e vari\xe1veis textuais por meio do operador de soma. Al\xe9m dessa forma, podemos fazer uso de PlaceHolders ou Interpola\xe7\xe3o de string como nos exemplos abaixo."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:'string nome = "Bruno";\n\n// Concatena\xe7\xe3o\nConsole.WriteLine("Meu nome \xe9 " + nome + ", obrigado!");\n\n// PlaceHolder\nConsole.WriteLine("Meu nome \xe9 {0}, obrigado!", nome);\n\n// Interpola\xe7\xe3o\nConsole.WriteLine($"Meu nome \xe9 {nome}, obrigado!");\n'})}),"\n",(0,n.jsx)(o.p,{children:"Os tr\xeas exemplos geram o mesmo resultado mas s\xe3o consideravelmente diferentes no m\xe9todo. Podemos usar o que for mais agrad\xe1vel para uma leitura do c\xf3digo e posterior manuten\xe7\xe3o do mesmo."}),"\n",(0,n.jsx)(o.h5,{id:"entrada-de-dados",children:"Entrada de Dados"}),"\n",(0,n.jsx)(o.p,{children:"Agora que sabemos como fazer nosso programa imprimir resultados, vamos aprender como inputar dados nele. Em c# podemos inserir dados com o seguinte comando:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"variavel = Console.ReadLine();\n"})}),"\n",(0,n.jsxs)(o.p,{children:["O input captado por esse comando ",(0,n.jsx)(o.strong,{children:"sempre retorna uma string"}),". Mas as vezes precisamos nos certificar que o input foi feito da maneira correta. Para isso podemos manipular os dados inseridos do seguinte modo:"]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"// Valores Inteiros\nvariavel = int.Parse(Console.ReaLine());\nvariavel = Convert.ToInt32(Console.ReadLine());\n\n// Valores Reais\nvariavel = double.Parse(Console.ReadLine());\nvariavel = float.Parse(Console.ReadLine());\nvariavel = Convert.ToDouble(Console.ReadLine());\n\n// Valores Booleanos\nvariavel = bool.Parse(Console.ReadLine());\n\n// Valores String\nvariavel = Console.ReadLine();\n"})}),"\n",(0,n.jsxs)(o.p,{children:["Depois que executamos um dessas maneiras de coletar os dados, \xe9 de boa pr\xe1tica fornecermos um output logo ap\xf3s a entrada do dado. Isso evita aquela sensa\xe7\xe3o de d\xfavida se o programa est\xe1 sendo executado ou n\xe3o. Ou seja, \xe9 bom sempre manter a dupla ",(0,n.jsx)(o.code,{children:"ReadLine()"})," com o ",(0,n.jsx)(o.code,{children:"WriteLine()"}),'. O nome que damos para essa dupla \xe9 "Prompt".']}),"\n",(0,n.jsxs)(o.p,{children:["Outra dica boa \xe9 usar o comando ",(0,n.jsx)(o.code,{children:"Console.ReadKey()"})," no final do programa. Isso faz com que o console aguarde alguma tecla para finalizar. Evita que a aplica\xe7\xe3o abra e feche sem que o user consiga enxergar o resultado do processo."]}),"\n",(0,n.jsx)(o.h3,{id:"estrutura-sequencial",children:"Estrutura Sequencial"}),"\n",(0,n.jsx)(o.p,{children:"Agora que sabemos como receber valores do usu\xe1rio e como devolver nova informa\xe7\xe3o a partir do processamento, vamos come\xe7ar a estudar a etapa de processamento atrav\xe9s do estudo das estruturas sequenciais."}),"\n",(0,n.jsx)(o.h4,{id:"operadores-e-fun\xe7\xf5es-aritm\xe9ticas",children:"Operadores e Fun\xe7\xf5es Aritm\xe9ticas"}),"\n",(0,n.jsx)(o.p,{children:"Em c# n\xf3s temos os seguintes tokens para realizar as opera\xe7\xf5es aritm\xe9ticas:"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"+"})," Soma"]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"-"})," Subtra\xe7\xe3o"]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"*"})," Multiplica\xe7\xe3o"]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"/"})," Divis\xe3o"]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"%"})," Resto da Divis\xe3o inteira"]}),"\n"]}),"\n",(0,n.jsxs)(o.p,{children:["Al\xe9m disso, temos a presen\xe7a do que podemos chamar de ",(0,n.jsx)(o.strong,{children:"operadores de atribui\xe7\xe3o combinada"}),". Que faz a atribui\xe7\xe3o de valor com alguma opera\xe7\xe3o aritm\xe9tica:"]}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"soma += 100"})," \xe9 igual a ",(0,n.jsx)(o.code,{children:"soma = soma + 100"})]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"subtracao -= 10"})," \xe9 igual a ",(0,n.jsx)(o.code,{children:"subtracao = subtracao - 10"})]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"multiplica *= 2"})," \xe9 igual a ",(0,n.jsx)(o.code,{children:"multiplica = multiplica * 2"})]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"divide /= 3"})," \xe9 igual a divide = divide / 3"]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"resto \\%= 2"})," \xe9 igual a resto = resto / 2"]}),"\n"]}),"\n",(0,n.jsxs)(o.p,{children:["N\xe3o bastando essa grande variedade, temos os operadores de ",(0,n.jsx)(o.strong,{children:"incremento e decremento"}),":"]}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:["Pr\xe9-incremento (",(0,n.jsx)(o.code,{children:"++x"}),") - Usa x + 1 antes do processamento"]}),"\n",(0,n.jsxs)(o.li,{children:["P\xf3s-incremento (",(0,n.jsx)(o.code,{children:"x++"}),") - Usa x + 1 ap\xf3s o processamento"]}),"\n",(0,n.jsxs)(o.li,{children:["Pr\xe9-decr\xe9scimo (",(0,n.jsx)(o.code,{children:"--x"}),") - Usa x - 1 antes do processamento"]}),"\n",(0,n.jsxs)(o.li,{children:["P\xf3s-decr\xe9scimo (",(0,n.jsx)(o.code,{children:"x--"}),") - Usa x -1 ap\xf3s o processamento"]}),"\n"]}),"\n",(0,n.jsx)(o.p,{children:"Essa diferen\xe7a de pre e p\xf3s \xe9 importante para as estruturas de repeti\xe7\xe3o, porque podemos lidar com \xedndices de tabelas que come\xe7am com valores diferentes. Mas, no geral, devemos olhar cada caso para escolher o que usar."}),"\n",(0,n.jsxs)(o.p,{children:["Existem outras opera\xe7\xf5es que est\xe3o contidas em um objeto nativo chamado ",(0,n.jsx)(o.code,{children:"Math"}),". Para fazermos potencia\xe7\xe3o usamos o m\xe9todo ",(0,n.jsx)(o.code,{children:"Math.Pow()"}),". Para fazermos raiz quadrada podemos usar ",(0,n.jsx)(o.code,{children:"Math.Sqrt()"}),(0,n.jsx)(o.sup,{children:(0,n.jsx)(o.a,{href:"#user-content-fn-3",id:"user-content-fnref-3","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"3"})}),"."]}),"\n",(0,n.jsx)(o.h4,{id:"express\xf5es-aritm\xe9ticas",children:"Express\xf5es Aritm\xe9ticas"}),"\n",(0,n.jsx)(o.p,{children:"Agora podemos juntar tudo que vimos em um programa simples de c\xe1lculo da m\xe9dia de 5 valores. O c\xf3digo e o seu resultado podem ser vistos abaixo."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:'// Declara\xe7\xe3o dos tipos das vari\xe1veis\nint n1, n2, n3, n4, n5, soma;\nfloat media;\n\n// Input dos dados\nConsole.WriteLine("Programa para c\xe1lculo da m\xe9dia de 5 valores.");\n\nConsole.WriteLine("Por favor, forne\xe7a o primeiro n\xfamero");\nn1 = Convert.ToInt32(Console.ReadLine());\nConsole.WriteLine("Por favor, forne\xe7a o segundo n\xfamero");\nn2 = Convert.ToInt32(Console.ReadLine());\nConsole.WriteLine("Por favor, forne\xe7a o terceiro n\xfamero");\nn3 = Convert.ToInt32(Console.ReadLine());\nConsole.WriteLine("Por favor, forne\xe7a o quarto n\xfamero");\nn4 = Convert.ToInt32(Console.ReadLine());\nConsole.WriteLine("Por favor, forne\xe7a o quinto n\xfamero");\nn5 = Convert.ToInt32(Console.ReadLine());\n\n// Processamento\nsoma = n1 + n2 + n3 + n4 + n5;\nmedia = soma / 5;\n\n// Output dos dados\nConsole.WriteLine("Os n\xfameros fornecidos foram:");\nConsole.WriteLine("N1={0},N2={1},N3={2},N4={3},N5={4}", n1, n2, n3, n4, n5);\nConsole.WriteLine("Cuja m\xe9dia \xe9 igual a {0}", media);\n'})}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.img,{alt:"Programa de c\xe1lculo da m\xe9dia de 5 valores em c#",src:a(7265).A+"",width:"404",height:"327"})}),"\n",(0,n.jsxs)(o.p,{children:["Outro exemplo que podemos usar \xe9 o do c\xe1lculo das ra\xedzes de uma fun\xe7\xe3o de segundo grau",(0,n.jsx)(o.sup,{children:(0,n.jsx)(o.a,{href:"#user-content-fn-4",id:"user-content-fnref-4","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"4"})}),". O programa abaixo recebe 3 valores e calcula as ra\xedzes, a imagem logo ap\xf3s nos mostra o resultado no prompt de comando."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:'// Programa para calcular o valor de x em uma equa\xe7\xe3o de segundo grau\n\n// Declara\xe7\xe3o das vari\xe1veis\ndouble a, b, c, x1, x2;\n\nConsole.WriteLine("Vamos resolver uma equa\xe7\xe3o do tipo ax^2 + bx + c = 0");\n\n// Input das variaveis\nConsole.WriteLine("Qual o valor de a? ");\na = Convert.ToDouble(Console.ReadLine());\n\nConsole.WriteLine("Qual o valor de b? ");\nb = Convert.ToDouble(Console.ReadLine());\n\nConsole.WriteLine("Qual o valor de c? ");\nc = Convert.ToDouble(Console.ReadLine());\n\n\nx1 = (-b + Math.Sqrt(Math.Pow(b,2) - 4 * a * c)) / 2 * a;\nx2 = (-b - Math.Sqrt(Math.Pow(b, 2) - 4 * a * c)) / 2 * a;\n\n// Output dos resultados\nConsole.WriteLine("Dados: a = {0}, b = {1} e c = {2}", a, b, c);\nConsole.WriteLine($"Equa\xe7\xe3o: (-({b}) +- Raiz(({b})^2 - 4*{a}*{c}))/2*{a} = 0");\nConsole.WriteLine("Resultado: x1 = {0} e x2 = {1}", x1, x2);\n'})}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.img,{alt:"Programa de resolu\xe7\xe3o de uma equa\xe7\xe3o do segundo grau.",src:a(9452).A+"",width:"471",height:"241"})}),"\n",(0,n.jsx)(o.p,{children:"A essa altura j\xe1 aprendemos como criar programas inteiros com as etapas de software que vimos anteriormente: input, processamento e output. Tudo isso em c#. Entretanto, no estado atual do c\xf3digo, nossos programas n\xe3o est\xe3o muito competentes em se adaptar a diferentes tipos de inputs ou resultados."}),"\n",(0,n.jsx)(o.p,{children:"Um exemplo pr\xe1tico \xe9 que, nesse segundo programa, podemos ter inputs que retornem um resultado indesejado como podemos ver na imagem abaixo."}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.img,{alt:"Programa de resolu\xe7\xe3o de uma equa\xe7\xe3o do segundo grau com erro.",src:a(3696).A+"",width:"474",height:"243"})}),"\n",(0,n.jsx)(o.h3,{id:"estrutura-condicional",children:"Estrutura Condicional"}),"\n",(0,n.jsxs)(o.p,{children:["A necessidade de lidarmos com diferentes situa\xe7\xf5es ou contextos \xe9 o que nos leva a estudarmos as ",(0,n.jsx)(o.strong,{children:"estruturas condicionais"}),". Por meio dessas estruturas, podemos construir diferentes outputs de acordo com qualquer l\xf3gica que implementarmos e, com isso, evitar v\xe1rios bugs nos nossos programas."]}),"\n",(0,n.jsx)(o.h4,{id:"operadores-relacionais",children:"Operadores Relacionais"}),"\n",(0,n.jsx)(o.p,{children:'Ao lidarmos com estrutura condicionais n\xf3s temos alguns operadores que nada mais s\xe3o do que express\xf5es l\xf3gicas que retornam apenas 2 resultados poss\xedveis: true ou false. Esses operadores s\xe3o como "gatilhos"\\ que s\xe3o usados para controle do fluxo de processamento do c\xf3digo.'}),"\n",(0,n.jsxs)(o.table,{children:[(0,n.jsx)(o.thead,{children:(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.th,{style:{textAlign:"center"},children:(0,n.jsx)(o.strong,{children:"Operador"})}),(0,n.jsx)(o.th,{style:{textAlign:"center"},children:(0,n.jsx)(o.strong,{children:"Opera\xe7\xe3o"})}),(0,n.jsx)(o.th,{style:{textAlign:"center"},children:(0,n.jsx)(o.strong,{children:"Exemplo"})})]})}),(0,n.jsxs)(o.tbody,{children:[(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:"=="})}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:"Igualdade"}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:"n1 == n2"})})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:"<"})}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:"Menor"}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:"a < 10"})})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:">"})}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:"Maio"}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:"b > 1"})})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:"<="})}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:"Menor igual"}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:"c <= 2"})})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:">="})}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:"Maior igual"}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:"d >= 22"})})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:"!="})}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:"Desigualdade"}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:"e != 100"})})]})]})]}),"\n",(0,n.jsx)(o.p,{children:"Na tabela acima, temos os operadores relacionais que s\xe3o usados ao longo das estruturas condicionais simples e compostas."}),"\n",(0,n.jsxs)(o.p,{children:["Tome cuidado com o operador de igualdade ",(0,n.jsx)(o.code,{children:"=="})," e o de atribui\xe7\xe3o ",(0,n.jsx)(o.code,{children:"="}),", afinal, eles usam o sinal de igualdade mas significam coisas diferentes."]}),"\n",(0,n.jsx)(o.h4,{id:"condi\xe7\xe3o-simples-e-composta",children:"Condi\xe7\xe3o Simples e Composta"}),"\n",(0,n.jsxs)(o.p,{children:["Em c# o comando usado para criar uma condi\xe7\xe3o simples \xe9 o ",(0,n.jsx)(o.code,{children:"if"}),". Se a condi\xe7\xe3o que colocarmos atrelada ao comando ",(0,n.jsx)(o.code,{children:"if"})," retornar um true, o bloco de c\xf3digo atribu\xeddo a ele ser\xe1 executar, caso contr\xe1rio, o c\xf3digo do bloco ser\xe1 ignorado."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:'// Parte condicional no calculo da equa\xe7\xe3o de segundo grau\n\ndelta = (Math.Pow(b, 2) - 4 * a * c);\n\n// Output dos resultados com condi\xe7\xe3o\nif (delta >= 0)\n{\n    Console.WriteLine("Dados: a = {0}, b = {1} e c = {2}", a, b, c);\n    Console.WriteLine($"Equa\xe7\xe3o: (-({b}) +- Raiz(({b})^2 - 4*{a}*{c}))/2*{a} = 0");\n    Console.WriteLine($"Delta: {delta}");\n    Console.WriteLine("Resultado: x1 = {0} e x2 = {1}", x1, x2);\n};\n\nif (delta < 0)\n{\n    Console.WriteLine("Dados: a = {0}, b = {1} e c = {2}", a, b, c);\n    Console.WriteLine($"Equa\xe7\xe3o: (-({b}) +- Raiz(({b})^2 - 4*{a}*{c}))/2*{a} = 0");\n    Console.WriteLine($"Delta: {delta}");\n    Console.WriteLine("Resultado: X n\xe3o possui raiz real! ");\n};\n'})}),"\n",(0,n.jsx)(o.p,{children:"Com essa adapta\xe7\xe3o, nosso c\xf3digo estar\xe1 preparado para o caso onde o interior da raiz (que chamamos de delta) seja negativo. Mas podemos ver que o nosso c\xf3digo ficou um pouco esquisito. Criamos dois blocos de c\xf3digo que s\xe3o, claramente, relacionados entre si: Se um bloco for executado, o outro n\xe3o ser\xe1. Para facilitar o trabalho com essas situa\xe7\xf5es, as linguagens de programa\xe7\xe3o possuem as estruturas de condi\xe7\xe3o compostas."}),"\n",(0,n.jsxs)(o.p,{children:["Esses s\xe3o os casos onde, se o teste l\xf3gico retorna true, executamos um bloco, ou o outro bloco ser\xe1 executado caso o resultado l\xf3gico seja false. Com isso evitamos ter que criar dois testes com ",(0,n.jsx)(o.code,{children:"if"}),". O token usado em c# para uma condi\xe7\xe3o com dois blocos de c\xf3digos (ou seja, uma condicional composta) \xe9 o ",(0,n.jsx)(o.code,{children:"if-else"}),". Abaixo n\xf3s reescrevemos a solu\xe7\xe3o anterior mas agora fazendo uso do condional composto."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:'// Parte condicional no calculo da equa\xe7\xe3o de segundo grau\n\ndelta = (Math.Pow(b, 2) - 4 * a * c);\n\n// Output dos resultados com condi\xe7\xe3o\nif (delta >= 0)\n{\n    Console.WriteLine("Dados: a = {0}, b = {1} e c = {2}", a, b, c);\n    Console.WriteLine($"Equa\xe7\xe3o: (-({b}) +- Raiz(({b})^2 - 4*{a}*{c}))/2*{a} = 0");\n    Console.WriteLine($"Delta: {delta}");\n    Console.WriteLine("Resultado: x1 = {0} e x2 = {1}", x1, x2);\n} else\n{\n    Console.WriteLine("Dados: a = {0}, b = {1} e c = {2}", a, b, c);\n    Console.WriteLine($"Equa\xe7\xe3o: (-({b}) +- Raiz(({b})^2 - 4*{a}*{c}))/2*{a} = 0");\n    Console.WriteLine($"Delta: {delta}");\n    Console.WriteLine("Resultado: X n\xe3o possui raiz real! ");\n};\n'})}),"\n",(0,n.jsx)(o.p,{children:"Agora sim nosso c\xf3digo est\xe1 elegante e adaptado para as duas sa\xeddas poss\xedveis de resultado para os inputs do usu\xe1rio."}),"\n",(0,n.jsx)(o.h4,{id:"operadores-booleanos-e-comandos-if-aninhados",children:"Operadores Booleanos e Comandos IF Aninhados"}),"\n",(0,n.jsxs)(o.p,{children:["N\xf3s aprendemos que o bloco de c\xf3digo ser\xe1 executado sempre que a express\xe3o l\xf3gica retornar um resultado true. Tamb\xe9m vimos que existem os operadores relacionais que nos ajudam a construir essas express\xf5es. Agora, vamos aprender os operadores booleanos que nada mais s\xe3o do que os operadores l\xf3gicos cl\xe1ssicos (",(0,n.jsxs)(o.span,{className:"katex",children:[(0,n.jsx)(o.span,{className:"katex-mathml",children:(0,n.jsx)(o.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,n.jsxs)(o.semantics,{children:[(0,n.jsxs)(o.mrow,{children:[(0,n.jsx)(o.mo,{children:"\u2227"}),(0,n.jsx)(o.mo,{separator:"true",children:","}),(0,n.jsx)(o.mo,{children:"\u2228"}),(0,n.jsx)(o.mo,{separator:"true",children:","}),(0,n.jsx)(o.mi,{mathvariant:"normal",children:"\xac"})]}),(0,n.jsx)(o.annotation,{encoding:"application/x-tex",children:"\\land, \\lor, \\neg"})]})})}),(0,n.jsx)(o.span,{className:"katex-html","aria-hidden":"true",children:(0,n.jsxs)(o.span,{className:"base",children:[(0,n.jsx)(o.span,{className:"strut",style:{height:"0.75em",verticalAlign:"-0.1944em"}}),(0,n.jsx)(o.span,{className:"mord",children:"\u2227"}),(0,n.jsx)(o.span,{className:"mpunct",children:","}),(0,n.jsx)(o.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,n.jsx)(o.span,{className:"mord",children:"\u2228"}),(0,n.jsx)(o.span,{className:"mpunct",children:","}),(0,n.jsx)(o.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,n.jsx)(o.span,{className:"mord",children:"\xac"})]})})]}),")."]}),"\n",(0,n.jsxs)(o.table,{children:[(0,n.jsx)(o.thead,{children:(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.th,{style:{textAlign:"center"},children:(0,n.jsx)(o.strong,{children:"Operador"})}),(0,n.jsx)(o.th,{style:{textAlign:"center"},children:(0,n.jsx)(o.strong,{children:"Opera\xe7\xe3o"})}),(0,n.jsx)(o.th,{style:{textAlign:"center"},children:(0,n.jsx)(o.strong,{children:"Exemplo"})})]})}),(0,n.jsxs)(o.tbody,{children:[(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:"&& (AND)"})}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:"true se tudo for true"}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:"if (a > 2 && b == 1)"})})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:"(OR)"})}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:"true se um for true"}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:"if (a < 2b != 0)"})})]}),(0,n.jsxs)(o.tr,{children:[(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:"! (NOT)"})}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:"false se true"}),(0,n.jsx)(o.td,{style:{textAlign:"center"},children:(0,n.jsx)(o.code,{children:"if (!(x==y))"})})]})]})]}),"\n",(0,n.jsxs)(o.p,{children:["Existem problemas que requerem mais de dois resultados no output. Nesse caso, n\xe3o \xe9 suficiente usarmos apenas os tokens de condicional composto ",(0,n.jsx)(o.code,{children:"if-else"})," da maneira como aprendemos at\xe9 agora."]}),"\n",(0,n.jsxs)(o.p,{children:["Para resolver esse problema temos a t\xe9cnica de ",(0,n.jsx)(o.code,{children:"IF"})," aninhados (nested) e a de ",(0,n.jsx)(o.code,{children:"IF"})," escada (ladder). As duas formas produzem o mesmo resultado mas mudam significativamente legibilidade do nosso c\xf3digo. Abaixo temos um exemplo de cada."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"// Leadder IF\nif (condicao1)\n  comando1;\nelse if (condicao2)\n  comando2;\nelse if (condicao3)\n  comando3;\n...\nelse if (condicao_n-1)\n  comando_n-1;\nelse\n  comando_n;\n"})}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"// Nested IF\nif (condicao1)\n  comando1;\nelse\n  if (condicao2)\n    comando2;\n  else\n    if (condicao3)\n      comando3;\n    else\n      if (condicao4)\n        comando4;\n    ...\n      else\n        if (condicao_n-1)\n          comando_n-1;\n        else\n          comando_n;\n"})}),"\n",(0,n.jsx)(o.h4,{id:"o-comando-switch-e-o-operador-tern\xe1rio",children:"O Comando Switch e o Operador Tern\xe1rio"}),"\n",(0,n.jsx)(o.p,{children:"Agora que aprendemos a lidar com v\xe1rios casos condicionais encadeados, podemos construir solu\xe7\xf5es relativamente complexas com v\xe1rias sa\xeddas diferentes. Entretanto, quando tempos muitas situa\xe7\xf5es poss\xedveis, o nosso c\xf3digo pode ficar um pouco ruim de ser lido por outras pessoas."}),"\n",(0,n.jsx)(o.p,{children:"Pensando nessa necessidade, os criadores do c# criaram um operador que simplifica ainda mais nosso trabalho. Sim, \xe9 isso mesmo, n\xf3s acabamos de aprender IFs aninhados e em escada e j\xe1 vamos aprender uma maneira melhor de fazer exatamente o que eles fazem. Se acostume com isso. Em tecnologia existem quase sempre v\xe1rias maneiras de se chegar no mesmo resultado."}),"\n",(0,n.jsxs)(o.p,{children:["O operador que \xe9 mais indicado para lidar com v\xe1rias situa\xe7\xf5es de sa\xedda \xe9 o ",(0,n.jsx)(o.code,{children:"switch-case"}),". Cuja constru\xe7\xe3o \xe9 bem mais leg\xedvel que os IFs anteriores. Abaixo temos um exemplo."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"// Lidando com varias condi\xe7\xf5es com switch/case\nswitch(opcao)\n{\n  case op1:\n    comandos1;\n    break;\n  case op2:\n    comandos2;\n    break;\n  case op3:\n    comandos3;\n    break;\n  ...\n  case op_n:\n    comandos_n;\n    break;\n  default:\n    // bloco que sera executado se nenhuma \n    // das anteriores for escolhida;\n}\n"})}),"\n",(0,n.jsx)(o.admonition,{title:"Coment\xe1rio",type:"tip",children:(0,n.jsx)(o.p,{children:"Existem v\xe1rias maneiras de se usar o switch. Eu n\xe3o vou me aprofundar agora em todas elas. Mas vale muito a pena fazer uso dessa ferramenta para cen\xe1rios de v\xe1rias intera\xe7\xf5es poss\xedveis ou m\xfaltiplas sa\xeddas contextuais."})}),"\n",(0,n.jsxs)(o.p,{children:["Para finalizar o nosso estudo das estruturas condicionais, vamos aprender como trabalhar com o ",(0,n.jsx)(o.strong,{children:"Operador tern\xe1rio"}),". Esse nome \xe9 relativo ao n\xfamero de operandos que esse comando usa (no caso, 3)."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"condicao ? expressao_true : expressao_false\n"})}),"\n",(0,n.jsx)(o.p,{children:"A condi\xe7\xe3o \xe9 uma express\xe3o l\xf3gica (que usa operadores relacionais e booleanos) que s\xf3 pode retornar true ou false. A express\xe3o logo ap\xf3s o ponto de interroga\xe7\xe3o ser\xe1 o retorno do operador em caso de true. A express\xe3o ap\xf3s os dois pontos \xe9 o retorno em caso de false."}),"\n",(0,n.jsxs)(o.p,{children:["Sim, \xe9 exatamente um caso de ",(0,n.jsx)(o.code,{children:"if-else"})," s\xf3 que em apenas uma linha. Como as solu\xe7\xf5es podem ficar muito grandes, \xe9 sempre bom termos em mente que quanto menos linhas, mais f\xe1cil ser\xe1 fazer manuten\xe7\xe3o nos nossos programas. O operador tern\xe1rio \xe9 muito usado por programadores mais experientes. Abaixo temos um exemplo comparando as duas maneiras."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"// Compara\xe7\xe3o entre if-else e operador tern\xe1rio\nbool passou;\ndouble nota;\n\n// if-else\nif (nota >= 60)\n  passou = true;\nelse\n  passou = false;\n\n// operador ternario\npassou = nota >= 60 ? true : false // maneira 1\npassou = (nota >= 60) ? true : false // maneira 2\n"})}),"\n",(0,n.jsx)(o.p,{children:"Agora podemos ver claramente a vantagem do uso do operador tern\xe1rio."}),"\n",(0,n.jsx)(o.h3,{id:"estrutura-de-repeti\xe7\xe3o",children:"Estrutura de Repeti\xe7\xe3o"}),"\n",(0,n.jsx)(o.p,{children:"Como sabemos, ainda temos mais um tipo de estrutura para estudarmos. At\xe9 agora, aprendemos como estruturar um c\xf3digo sequencialmente e como criar blocos de c\xf3digo que s\xf3 ser\xe3o executados se determinadas condi\xe7\xf5es previamente definidas forem satisfeitas. Agora, vamos aprender como evitar ter que repetir blocos de c\xf3digos."}),"\n",(0,n.jsx)(o.p,{children:"O c# possui 3 operadores de repeti\xe7\xe3o:"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"// tipo 01\nwhile (condicao)\n  comando;\n\n// tipo 02\ndo\n  comando;\nwhile (condicao);\n\n// tipo 03\nfor (inicial; expressao logica; atualizacao)\n  comando;\n"})}),"\n",(0,n.jsx)(o.p,{children:"Vamos ver um exemplo de como nosso c\xf3digo pode ser reduzir com o uso da estrutura de repeti\xe7\xe3o. Primeiro, vamos ver um exemplo onde o programa recebe uma lista de 3 palavras (nome, nome do meio e sobrenome) e depois faz o print."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:'// Programa que recebe nome completo e\n// depois devolve uma mensagem de boas vindas\n\nstring nome, mid, last;\n\nConsole.WriteLine(" Seja bem vindo(a)!");\n\nConsole.WriteLine(" Qual seu primeiro nome?");\nnome = Console.ReadLine();\n\nConsole.WriteLine(" Qual seu nome do meio?");\nmid = Console.ReadLine();\n\nConsole.WriteLine(" Qual seu sobrenome?");\nlast = Console.ReadLine();\n\nConsole.WriteLine(" Bem Vindo(a)!");\n\nConsole.WriteLine(nome);\nConsole.WriteLine(mid);\nConsole.WriteLine(last);\n\nConsole.WriteLine(" E Volte sempre!");\n'})}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.img,{alt:"Programa simples",src:a(5318).A+"",width:"249",height:"287"})}),"\n",(0,n.jsx)(o.p,{children:"Agora vamos refazer esse programa usando os 3 tokens de estrutura de repeti\xe7\xe3o que o c# nos d\xe1. Vamos usar a mesma ordem em que elas foram apresentadas."}),"\n",(0,n.jsx)(o.h4,{id:"os-comandos-while-do-while-e-for",children:"Os Comandos WHILE, DO WHILE e FOR"}),"\n",(0,n.jsx)(o.h5,{id:"repeti\xe7\xe3o-usando-while",children:"Repeti\xe7\xe3o usando WHILE"}),"\n",(0,n.jsxs)(o.p,{children:["A repeti\xe7\xe3o usando o token ",(0,n.jsx)(o.code,{children:"while"})," \xe9 condicionada ao resultado de uma express\xe3o l\xf3gica. Caso a express\xe3o l\xf3gica retorne true, o bloco de c\xf3digo ser\xe1 executado at\xe9 o seu final. Ap\xf3s a execu\xe7\xe3o, \xe9 feita uma nova verifica\xe7\xe3o da express\xe3o l\xf3gica. O processo de loop s\xf3 ser\xe1 finalizado caso a express\xe3o l\xf3gica retorne o valor false. Abaixo temos a refatora\xe7\xe3o",(0,n.jsx)(o.sup,{children:(0,n.jsx)(o.a,{href:"#user-content-fn-5",id:"user-content-fnref-5","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"5"})})," evitando a repeti\xe7\xe3o de partes de partes do c\xf3digo anterior."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:'// Programa de nomes refatorado com while\nstring nome, mid, last;\nint contador;\n\n// nome default\nnome = "";\nmid = "";\nlast = "";\n\nConsole.WriteLine(" Seja bem vindo(a)!");\n\nConsole.WriteLine(" Por favor, insira o seu nome completo.");\nConsole.WriteLine(" Obs. No m\xe1ximo 3 palavras");\ncontador = 1;\n\nwhile (contador <= 3)\n{   \n    Console.WriteLine($" Palavra n\xba {contador} do seu nome?");\n    if (contador == 1)\n        nome = Console.ReadLine();\n    else if (contador == 2)\n        mid = Console.ReadLine();\n    else if (contador == 3)\n        last = Console.ReadLine();\n\n    contador += 1;\n};\n\nConsole.WriteLine(" Bem Vindo(a)!");\nConsole.WriteLine(nome);\nConsole.WriteLine(mid);\nConsole.WriteLine(last);\nConsole.WriteLine(" E Volte sempre!");\n'})}),"\n",(0,n.jsx)(o.p,{children:'Agora n\xf3s temos um loop usando a express\xe3o "a vari\xe1vel contador \xe9 menor igual a 3?" sempre que a resposta for sim, o programa perguntar\xe1 qual a n-\xe9sima palavra do nome da pessoa. Pode parecer que nesse exemplo o uso do loop mais complicou do que facilitou. Mas o objetivo aqui \xe9 exercitar o uso desse operador, ent\xe3o devemos focar em compreender como usar o while.'}),"\n",(0,n.jsx)(o.h5,{id:"repeti\xe7\xe3o-usando-do-while",children:"Repeti\xe7\xe3o usando DO-WHILE"}),"\n",(0,n.jsx)(o.p,{children:"Para a nossa sorte, o operador DO WHILE \xe9 muito similar ao WHILE. A \xfanica diferen\xe7a \xe9 que primeiro declaramos o bloco de c\xf3digo e, no final, colocamos a condi\xe7\xe3o para sua execu\xe7\xe3o. No exemplo abaixo temos o mesmo resultado que o de cima mas usando essa outra estrutura de operador."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:'// Programa de nomes refatorado com do-while\nstring nome, mid, last;\nint contador;\n\n// nome default\nnome = "";\nmid = "";\nlast = "";\n\nConsole.WriteLine(" Seja bem vindo(a)!");\n\nConsole.WriteLine(" Por favor, insira o seu nome completo.");\nConsole.WriteLine(" Obs. No m\xe1ximo 3 palavras");\ncontador = 1;\n\ndo\n{   \n  Console.WriteLine($" Palavra n\xba {contador} do seu nome?");\n   if (contador == 1)\n       nome = Console.ReadLine();\n   else if (contador == 2)\n       mid = Console.ReadLine();\n   else if (contador == 3)\n       last = Console.ReadLine();\n\n   contador += 1;\n} while (contador <= 3);\n\nConsole.WriteLine(" Bem Vindo(a)!");\nConsole.WriteLine(nome);\nConsole.WriteLine(mid);\nConsole.WriteLine(last);\nConsole.WriteLine(" E Volte sempre!");\n'})}),"\n",(0,n.jsx)(o.h5,{id:"repeti\xe7\xe3o-usando-for",children:"Repeti\xe7\xe3o usando FOR"}),"\n",(0,n.jsxs)(o.p,{children:["Quando usamos nosso operador while, foi criada uma vari\xe1vel ",(0,n.jsx)(o.code,{children:"contador"}),' que era incrementada a cada itera\xe7\xe3o at\xe9 que o teste l\xf3gico "menor igual a 3"\\ retorne false. A vantagem do operador de loop ',(0,n.jsx)(o.code,{children:"for"})," \xe9 que podemos fazer isso diretamente no par\xe2metro da fun\xe7\xe3o."]}),"\n",(0,n.jsxs)(o.p,{children:["O operador de loop ",(0,n.jsx)(o.code,{children:"for"})," recebe 3 par\xe2metros, na ordem: condi\xe7\xe3o inicial da vari\xe1vel de controle; express\xe3o l\xf3gica (que retorna true ou false) e, por fim, um incremento ou decremento."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:'// Programa de nomes refatorado com for\nstring nome, mid, last;\nint contador;\n\n// nome default\nnome = "";\nmid = "";\nlast = "";\n\nConsole.WriteLine(" Seja bem vindo(a)!");\n\nConsole.WriteLine(" Por favor, insira o seu nome completo.");\nConsole.WriteLine(" Obs. No m\xe1ximo 3 palavras");\ncontador = 1;\n\nfor (contador = 1; contador <= 3; contador++)\n{   \n    Console.WriteLine($" Qual a palavra n\xba {contador} do seu nome?");\n    if (contador == 1)\n        nome = Console.ReadLine();\n    else if (contador == 2)\n        mid = Console.ReadLine();\n    else if (contador == 3)\n        last = Console.ReadLine();\n};\n\nConsole.WriteLine(" Bem Vindo(a)!");\nConsole.WriteLine(nome);\nConsole.WriteLine(mid);\nConsole.WriteLine(last);\nConsole.WriteLine(" E Volte sempre!");\n'})}),"\n",(0,n.jsx)(o.h4,{id:"contadores-e-acumuladores",children:"Contadores e Acumuladores"}),"\n",(0,n.jsxs)(o.p,{children:["Agora sabemos reduzir nossos c\xf3digos usando 3 tipos de tokens fornecidos pelo c#. Vamos ver um pouquinho mais a respeito do atributo de contador do loop ",(0,n.jsx)(o.code,{children:"for"}),"."]}),"\n",(0,n.jsxs)(o.p,{children:["Um ",(0,n.jsx)(o.strong,{children:"contador"})," nada mais \xe9 do que uma vari\xe1vel do tipo constante que receber\xe1 a atualiza\xe7\xe3o do seu valor a cada loop. Se a situa\xe7\xe3o inicial do nosso contador for igual a 1, a cada itera\xe7\xe3o ele receber\xe1 a express\xe3o ",(0,n.jsx)(o.code,{children:"contador = contador + 1"}),"."]}),"\n",(0,n.jsx)(o.p,{children:"Podemos criar um contador diretamente no c\xf3digo atrav\xe9s da atribui\xe7\xe3o do valor pela soma. Ou, podemos usar os operadores de incremento e decremento que aprendemos anteriormente. A cada itera\xe7\xe3o em uma estrutura de loop, a vari\xe1vel receber\xe1 +1 como incremento ou -1 no caso do decremento."}),"\n",(0,n.jsxs)(o.p,{children:["Podemos usar o operador de incremento tanto no bloco de c\xf3digo de um loop quanto como par\xe2metro. Em um ",(0,n.jsx)(o.code,{children:"for"}),", quando colocamos o terceiro par\xe2metro igual a ",(0,n.jsx)(o.code,{children:"contador++"}),", a cada itera\xe7\xe3o teremos ",(0,n.jsx)(o.code,{children:"+1"})," atribu\xeddo ao contador."]}),"\n",(0,n.jsxs)(o.p,{children:["Um ",(0,n.jsx)(o.strong,{children:"acumulador"})," \xe9 muito parecido com um contador, a diferen\xe7a \xe9 que a cada itera\xe7\xe3o n\xf3s podemos adicionar qualquer valor ao acumulador. Por exemplo, se queremos calcular a m\xe9dia de uma turma, teremos que somar todas as notas e dividir pelo quantitativo dos alunos da turma. Para isso, podemos criar um acumulador chamado ",(0,n.jsx)(o.code,{children:"soma_notas"})," que recebe, para cada aluno, a nota atrav\xe9s de um comando parecido com o exemplo a baixo."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"double soma_notas = 0;\n\nfor (n_aluno=0; n_alunos <= qtd; n_aluno++)\n{\n  soma_notas = soma_notas + nota\n};\n"})}),"\n",(0,n.jsxs)(o.p,{children:["A cada itera\xe7\xe3o, somamos o valor da vari\xe1vel ",(0,n.jsx)(o.code,{children:"nota"})," \xe0 vari\xe1vel ",(0,n.jsx)(o.code,{children:"soma_notas"}),"."]}),"\n",(0,n.jsx)(o.h2,{id:"manipula\xe7\xe3o-de-dados-em-mem\xf3ria-prim\xe1ria-e-secund\xe1ria",children:"Manipula\xe7\xe3o de Dados em Mem\xf3ria Prim\xe1ria e Secund\xe1ria"}),"\n",(0,n.jsx)(o.p,{children:'Ao longo do material n\xf3s usamos v\xe1rias vezes frases como "a medida que nosso c\xf3digo cresce" ou "para manter a simplicidade no processo de atualiza\xe7\xe3o" e outras frases de mesmo teor. Isso n\xe3o \xe9 em v\xe3o. Quando olhamos os c\xf3digos dos sistemas operacionais, por exemplo, podemos ver que a quantidade de linhas de c\xf3digo passam da casa do milh\xe3o. Manter tudo isso funcionando de modo coeso e atualiz\xe1vel \xe9 uma tarefa que demanda muita habilidade e planejamento.'}),"\n",(0,n.jsx)(o.p,{children:"Para nos ajudar nesse trabalho, vamos aprender sobre m\xe9todos de organiza\xe7\xe3o de c\xf3digo atrav\xe9s do uso de fun\xe7\xf5es e procedimentos."}),"\n",(0,n.jsx)(o.h3,{id:"criando-e-usando-fun\xe7\xf5es-e-procedimentos",children:"Criando e Usando Fun\xe7\xf5es e Procedimentos"}),"\n",(0,n.jsx)(o.p,{children:"Normalmente, quando estamos desenvolvendo uma solu\xe7\xe3o de software, primeiro n\xf3s criamos um algoritmo que descreve os pormenores o que ser\xe1 feito e como ser\xe1 feito. Essa primeira etapa \xe9 focada na solu\xe7\xe3o do problema."}),"\n",(0,n.jsx)(o.p,{children:"A partir dela, devemos pensar em encontrar procedimentos que se repetem ao longo do c\xf3digo ou que podem ser usados para outros trabalhos similares. Sempre que identificarmos padr\xf5es que podem ser reutilizados, estamos diante de uma melhoria por modulariza\xe7\xe3o."}),"\n",(0,n.jsx)(o.p,{children:"A modulariza\xe7\xe3o (tamb\xe9m chamada de sub-rotinas ou sub-programas) \xe9 a pr\xe1tica de reduzir o nosso c\xf3digo em partes menores que recebem nomes diferentes dependendo da linguagem. Em linguagens orientadas \xe0 objeto como o c# n\xf3s chamamos de modulariza\xe7\xe3o."}),"\n",(0,n.jsx)(o.p,{children:"A ideia \xe9 simples: menos linhas, mais f\xe1cil ser\xe1 a manuten\xe7\xe3o. Esse \xe9 um valor muito caro no meio do desenvolvimento profissional de software e devemos ter sempre essa postura em mente."}),"\n",(0,n.jsxs)(o.p,{children:["Existem dois tipos de m\xe9todos para modulariza\xe7\xe3o: ",(0,n.jsx)(o.strong,{children:"fun\xe7\xf5es"}),", que sempre retornam algum valor, e ",(0,n.jsx)(o.strong,{children:"procedimentos"})," que n\xe3o retornam nenhum valor. Abaixo vemos como criar esses dois tipos."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"// criando uma fun\xe7\xe3o que retorna um inteiro\nint nome_metodo(string par1, float par2,..., int parn)\n{\n    int valor_resultado;\n    comando1;\n    ...\n    return valor_retorno;\n};\n// criando um procedimento\nstatic void nome_procedimento (string par1, double par2,..., int parn)\n{\n    comando1;\n    ...\n};\n\n"})}),"\n",(0,n.jsxs)(o.p,{children:["Podemos ver que um procedimento em c# recebe esse token\n",(0,n.jsx)(o.code,{children:"void"})," antes de ser criado (ainda n\xe3o aprenderemos o que significa esse termo\n",(0,n.jsx)(o.code,{children:"static"}),")."]}),"\n",(0,n.jsx)(o.p,{children:"Para usarmos um par\xe2metro n\xe3o precisamos fazer nenhuma atribui\xe7\xe3o, basta chamar-lo com os seus par\xe2metros preenchidos e atribu\xeddos ao tipo de vari\xe1vel correto. No caso de uma fun\xe7\xe3o, como ela retorna um resultado, precisamos atribuir o resultado a alguma vari\xe1vel. Abaixo temos um exemplo de como usar cada um desses m\xe9todos."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"// chamando um procedimento\nnome_procedimento(par1,par2);\n// chamando um m\xe9todo\nresultado = nome_metodo(par1,par2);\n\n"})}),"\n",(0,n.jsx)(o.admonition,{title:"Coment\xe1rio",type:"tip",children:(0,n.jsxs)(o.p,{children:["Se n\xe3o queremos usar nenhum par\xe2metro, basta definir o procedimento ou o m\xe9todo com os par\xeanteses vazios, por exemplo,\n",(0,n.jsx)(o.code,{children:"nome_procedimento()"}),"."]})}),"\n",(0,n.jsx)(o.p,{children:"A essa altura voc\xea j\xe1 deve ter percebido que um procedimento nada mais \xe9 que um tipo de m\xe9todo. S\xf3 que ele possui uma regra diferente na hora da cria\xe7\xe3o e n\xe3o pode ter seu resultado atribu\xeddo a nenhuma vari\xe1vel. Desse modo, a modulariza\xe7\xe3o faz uso de dois m\xe9todos poss\xedveis."}),"\n",(0,n.jsx)(o.h3,{id:"passagem-de-par\xe2metros",children:"Passagem de Par\xe2metros"}),"\n",(0,n.jsx)(o.p,{children:'Os par\xe2metros s\xe3o vari\xe1veis que podem ser transferidos (tamb\xe9m dizemos que eles s\xe3o "passados") para que o nosso m\xe9todo seja executado. Esses ser\xe3o os valores que o nosso m\xe9todo vai receber e processar.'}),"\n",(0,n.jsxs)(o.p,{children:["Podemos classificar os par\xe2metros em dois tipos: ",(0,n.jsx)(o.strong,{children:"Formais"}),", que s\xe3o definidos na declara\xe7\xe3o (ou cria\xe7\xe3o) do m\xe9todo e s\xe3o trabalhados dentro do bloco de c\xf3digo interno a ele como se fossem vari\xe1veis novas; e os ",(0,n.jsx)(o.strong,{children:"Reais"}),", que s\xe3o passados para o m\xe9todo no momento da invoca\xe7\xe3o e ser\xe3o atribu\xeddos aos par\xe2metros formal como representantes das vari\xe1veis reais."]}),"\n",(0,n.jsxs)(o.p,{children:["Quanto a passagem desses par\xe2metros, tamb\xe9m temos duas nomenclaturas:   ",(0,n.jsx)(o.strong,{children:"Passagem por valor"})," que \xe9 quando o par\xe2metro real \xe9 compilado para o par\xe2metro formal sem altera\xe7\xe3o do seu valor original e a     ",(0,n.jsx)(o.strong,{children:"Passagem por refer\xeancia"})," em que a manipula\xe7\xe3o feita dentro do bloco de c\xf3digo \xe9 espelhada nas vari\xe1veis de refer\xeancia fora do nosso m\xe9todo."]}),"\n",(0,n.jsx)(o.p,{children:"Quando usamos a passagem por valor, estamos usando os par\xe2metros do tipo formais. Quando usamos a passagem por refer\xeancia estamos usando os par\xe2metros reais."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:'int a = 5, b = 7;\n// exemplo de passagem por valor\nstatic void passagemValor(int x, int y)\n{\n    int temp = x;\n    x = y;\n    x = temp\n}\npassagemValor(a,b);\nConsole.Write($"a = {a} e b = {b}");\n> a = 5 e b = 7\n// exemplo de passagem por refer\xeancia\nstatic void passagemRef(ref int x, ref int y)\n{\n    int temp = x;\n    x = y;\n    y = temp;\n}\npassagemRef(ref a, ref b);\nConsole.Write($"a = {a} e b = {b}");\n> a = 7 e b = 5\n'})}),"\n",(0,n.jsx)(o.h5,{id:"dicas-e-boas-pr\xe1ticas",children:"Dicas e Boas Pr\xe1ticas"}),"\n",(0,n.jsxs)(o.p,{children:["o m\xe9todo ",(0,n.jsx)(o.code,{children:"Main()"})," \xe9 uma fun\xe7\xe3o especial de um programa escrito em c#. Ele \xe9 automaticamente executado quando o programa \xe9 iniciado e todos os outros m\xe9todos est\xe3o contidos dentro dele."]}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.img,{alt:"29-rickmeme.png",src:a(710).A+"",width:"1280",height:"1024"})}),"\n",(0,n.jsxs)(o.p,{children:["Um m\xe9todo deve ser ",(0,n.jsx)(o.strong,{children:"o menor poss\xedvel"}),". Se o objetivo \xe9 simplificar, devemos evitar ao m\xe1ximo ter grandes blocos de c\xf3digo dentro de um m\xe9todo. Se est\xe1 grande demais, n\xe3o seria melhor quebrar em m\xe9todos menores?"]}),"\n",(0,n.jsx)(o.p,{children:"Sempre devemos colocar nomes relevantes e esclarecedores."}),"\n",(0,n.jsx)(o.p,{children:"Devemos evitar ter m\xe9todos com um n\xfamero muito elevado de par\xe2metros. Cabe a mesma l\xf3gica sobre o tamanho: n\xe3o seria melhor quebrar em mais m\xe9todos?"}),"\n",(0,n.jsx)(o.p,{children:"Agora que aprendemos mais sobre o m\xe9todos e boas pr\xe1ticas, podemos entender bem melhor a estrutura padr\xe3o de uma aplica\xe7\xe3o em c#."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:'using System;\npublic class Program\n{\n    public static void Main()\n    {\n        Console.WriteLine("Hello World");\n    }\n}\n\n'})}),"\n",(0,n.jsx)(o.p,{children:"Ainda n\xe3o sabemos tudo que est\xe1 nesse template padr\xe3o de programa em c# mas, definitivamente, j\xe1 podemos dizer que entendemos algumas coisas desse c\xf3digo."}),"\n",(0,n.jsx)(o.h3,{id:"manipula\xe7\xe3o-de-arquivos-em-c",children:"Manipula\xe7\xe3o de Arquivos em C#"}),"\n",(0,n.jsx)(o.p,{children:"Aprendemos que um programa pode ser separado em 3 etapas e, at\xe9 agora, todo o input da informa\xe7\xe3o bem como o output est\xe1 sendo feito via janela do terminal ou prompt de comando. Mas na vida real, \xe9 super raro (se \xe9 que acontece) de um usu\xe1rio leigo ter que ficar usando o terminal para interagir com aplica\xe7\xf5es."}),"\n",(0,n.jsx)(o.p,{children:"Uma outra maneira de coletarmos informa\xe7\xe3o como input para o nosso processamento \xe9 por meio da leitura de arquivos e, consequentemente, tamb\xe9m podemos ter como output do nosso c\xf3digo a escrita de um arquivo na mem\xf3ria do computador."}),"\n",(0,n.jsxs)(o.p,{children:["Para facilitar nossa vida, o c# j\xe1 possui algumas classes (que podemos pensar como se fossem sin\xf4nimos de objetos) que foram criadas especialmente para lidar com esse trabalho. Essas classes de manipula\xe7\xe3o de arquivos est\xe3o guardadas em um namespace chamado ",(0,n.jsx)(o.code,{children:"System.IO"}),(0,n.jsx)(o.sup,{children:(0,n.jsx)(o.a,{href:"#user-content-fn-6",id:"user-content-fnref-6","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"6"})})]}),"\n",(0,n.jsx)(o.p,{children:"As classes que aprenderemos aqui s\xe3o:"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"StreamReader"})," - Para cria\xe7\xe3o de um fluxo de leitura do arquivo para o programa"]}),"\n",(0,n.jsxs)(o.li,{children:[(0,n.jsx)(o.code,{children:"StreamWriter"})," - Para cria\xe7\xe3o de um fluxo de sa\xedda ou grava\xe7\xe3o do programa para o arquivo"]}),"\n"]}),"\n",(0,n.jsx)(o.p,{children:"A manipula\xe7\xe3o feita por um programa em um arquivo \xe9, basicamente uma dessas opera\xe7\xf5es abaixo:"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:"Abrir para escrita"}),"\n",(0,n.jsx)(o.li,{children:"Abrir para leitura"}),"\n",(0,n.jsx)(o.li,{children:"Escrever dados no arquivo"}),"\n",(0,n.jsx)(o.li,{children:"Ler dados"}),"\n",(0,n.jsx)(o.li,{children:"Fechar o arquivo"}),"\n"]}),"\n",(0,n.jsx)(o.p,{children:'Agora o termo "fluxo" come\xe7a a ficar mais claro. Para um programa trabalhar um arquivo, ele precisa sinalizar para o sistema operacional que aquele arquivo est\xe1 sendo trabalhado por ele. Por isso existe esse fluxo de abrir o fluxo, ler ou gravar dados e, por fim, fechar o fluxo. Isso libera o arquivo para ser usado por outros programas.'}),"\n",(0,n.jsx)(o.h5,{id:"abrir-um-arquivo-para-leitura",children:"Abrir um arquivo para leitura"}),"\n",(0,n.jsxs)(o.p,{children:["Um arquivo n\xe3o pode ser lido usando um instanciamento (que \xe9 a cria\xe7\xe3o de uma vari\xe1vel do tipo de um objeto definido previamente) atrav\xe9s do objeto ",(0,n.jsx)(o.code,{children:"StreamReader"}),". Esse objeto \xe9 nativo e pode ser invocado sem precisar ser criado anteriormente. E, como todo objeto, possui m\xe9todos dentro dele (10 pra ser mais preciso) mas n\xf3s s\xf3 vamos usar o mais b\xe1sico."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:'// abrindo um arquivo para a leitura\nStreamReader NOME = new StreamReader("path.txt");\nStreamReader NOME = new StreamReader("c:\\temp\\path.txt");\nStreamReader NOME = new StreamReader(@"c:\temp\\path.txt");\n\n'})}),"\n",(0,n.jsx)(o.p,{children:"Agora que temos nosso objeto criado, para lermos o conte\xfado s\xf3 precisamos usar um dos m\xe9todos contidos nesse objeto criado."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"// obtendo o texto\nstring linha = NOME.ReadLine();\n// ler todas as linhas de um arquivo\nlinha = NOME.ReadLine();\nwhile (linha != null)\n{\n    ...\n    linha = NOME.ReadLine();\n};\n"})}),"\n",(0,n.jsx)(o.h5,{id:"abrir-um-arquivo-para-escrita",children:"Abrir um arquivo para escrita"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:'// criando o objeto de leitura em diferentes modos\nStreamWriter NOME = new StreamWriter("path.txt");\nStreamWriter NOME = new StreamWriter("c:\\temp\\path.txt");\nStreamWriter NOME = new StreamWriter(@"c:\temp\\path.txt");\n\n'})}),"\n",(0,n.jsx)(o.p,{children:"Qualquer arquivo que possa ser lida em um editor de texto (como o notepad) pode ser lida por esse m\xe9todo. Independente da extens\xe3o."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:'// usando o par\xe2metro append (true ou false)\n// conte\xfado existente sera apagado\nStreamWriter NOME = new StreamWriter("path.txt",false);\n// conte\xfado existente sera mantido\nStreamWriter NOME = new StreamWriter("path.txt",true);\n\n'})}),"\n",(0,n.jsx)(o.p,{children:"Agora s\xf3 precisamos saber como gravar os nossos dados no arquivo de texto. Isso \xe9 feito de maneira parecida com o comando que mostrava mensagens na tela do terminal de comando."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"// gravando uma string no arquivo texto aberto\narquivo.Write(string);\n// ou\narquivo.WriteLine(string);\n\n"})}),"\n",(0,n.jsx)(o.h5,{id:"fechando-um-arquivo",children:"Fechando um Arquivo"}),"\n",(0,n.jsxs)(o.p,{children:["Para fechar o stream, seja na leitura ou na grava\xe7\xe3o, usamos o m\xe9todo ",(0,n.jsx)(o.code,{children:"Close()"})," para garantir que o arquivo n\xe3o vai ficar bloqueado por um esquecimento. Sempre devemos fechar os fluxos!"]}),"\n",(0,n.jsx)(o.h2,{id:"bibliografia",children:"Bibliografia"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:["Ana Fernanda Gomes ASCENCIO; Edilene Aparecida Veneruchi de CAMPOS. ",(0,n.jsx)(o.strong,{children:"Fundamentos da Programa\xe7\xe3o de Computadores: algoritmos, Pascal, C/C++ e Java - 2\xaa edi\xe7\xe3o"}),". S\xe3o Paulo, SP : Pearson Education do Brasil, 2012"]}),"\n",(0,n.jsxs)(o.li,{children:["H. DEITEL et. Al.  ",(0,n.jsx)(o.strong,{children:"C#: Como Programar"}),". S\xe3o Paulo: Makron Books, 2003"]}),"\n",(0,n.jsxs)(o.li,{children:["John SHARP. ",(0,n.jsx)(o.strong,{children:"Microsoft Visual C# 2013"}),". Grupo A, 2014"]}),"\n",(0,n.jsxs)(o.li,{children:["Andr\xe9 Luiz Villar FORBELLONE, Henri Frederico EBERSP\xc4CHER. ",(0,n.jsx)(o.strong,{children:"L\xf3gica de programa\xe7\xe3o: a constru\xe7\xe3o de algoritmos e estruturas de dados"}),". S\xe3o Paulo: Prentice Hall, 2005."]}),"\n",(0,n.jsxs)(o.li,{children:["MANZANO, Jos\xe9 Augusto N. G; OLIVEIRA, Jayr Figueiredo de. Al",(0,n.jsx)(o.strong,{children:"goritmos: l\xf3gica para desenvolvimento de programa\xe7\xe3o de computadores"})," 28. ed. rev. e atual. S\xe3o Paulo, SP: \xc9rica, 2016"]}),"\n",(0,n.jsxs)(o.li,{children:["Sandra PUGA, Gerson RISSETTI. ",(0,n.jsx)(o.strong,{children:"L\xf3gica de Programa\xe7\xe3o e Estrutura de Dados: com aplica\xe7\xf5es em Java - 2\xaa edi\xe7\xe3o"}),". S\xe3o Paulo : Pearson, 2017"]}),"\n"]}),"\n","\n",(0,n.jsxs)(o.section,{"data-footnotes":!0,className:"footnotes",children:[(0,n.jsx)(o.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,n.jsxs)(o.ol,{children:["\n",(0,n.jsxs)(o.li,{id:"user-content-fn-1",children:["\n",(0,n.jsxs)(o.p,{children:["Float possui precis\xe3o simples e Double possui dupla precis\xe3o. ",(0,n.jsx)(o.a,{href:"#user-content-fnref-1","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,n.jsxs)(o.li,{id:"user-content-fn-2",children:["\n",(0,n.jsxs)(o.p,{children:["Isso \xe9 muito impressionante! ",(0,n.jsx)(o.a,{href:"#user-content-fnref-2","data-footnote-backref":"","aria-label":"Back to reference 2",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,n.jsxs)(o.li,{id:"user-content-fn-3",children:["\n",(0,n.jsxs)(o.p,{children:["Embora a gente saiba que a radicia\xe7\xe3o \xe9 uma pot\xeancia de fra\xe7\xe3o. ",(0,n.jsx)(o.a,{href:"#user-content-fnref-3","data-footnote-backref":"","aria-label":"Back to reference 3",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,n.jsxs)(o.li,{id:"user-content-fn-4",children:["\n",(0,n.jsxs)(o.p,{children:["Se voc\xea n\xe3o se lembra como resolver um problema desse, seu professor da sexta s\xe9rie est\xe1 rindo de voc\xea nesse exato minuto. ",(0,n.jsx)(o.a,{href:"#user-content-fnref-4","data-footnote-backref":"","aria-label":"Back to reference 4",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,n.jsxs)(o.li,{id:"user-content-fn-5",children:["\n",(0,n.jsxs)(o.p,{children:["Refatorar \xe9 o processo de mudar o c\xf3digo e obter o mesmo resultado no final. \xc9 uma \xf3tima pr\xe1tica a ser feita. ",(0,n.jsx)(o.a,{href:"#user-content-fnref-5","data-footnote-backref":"","aria-label":"Back to reference 5",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,n.jsxs)(o.li,{id:"user-content-fn-6",children:["\n",(0,n.jsxs)(o.p,{children:["IO significa Input/Output. ",(0,n.jsx)(o.a,{href:"#user-content-fnref-6","data-footnote-backref":"","aria-label":"Back to reference 6",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function m(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},7265:(e,o,a)=>{a.d(o,{A:()=>s});const s=a.p+"assets/images/25-algoritmo-logica-media-cs-77c487c6a73f7a2d2d0c2918e94deabd.png"},9452:(e,o,a)=>{a.d(o,{A:()=>s});const s=a.p+"assets/images/26-algoritmo-equacao-grau2-5af952c7190e8b347a634321e1b3160a.png"},3696:(e,o,a)=>{a.d(o,{A:()=>s});const s=a.p+"assets/images/27-erro-eq-grau2-c4ff61390e9c3bb0612129aae2240964.png"},5318:(e,o,a)=>{a.d(o,{A:()=>s});const s=a.p+"assets/images/28-programa-nome1-ceba0c82fe5264864a920cc3dae9aad2.png"},710:(e,o,a)=>{a.d(o,{A:()=>s});const s=a.p+"assets/images/29-rickmeme-03251bdf9b96261830faceabce77688c.png"},8453:(e,o,a)=>{a.d(o,{R:()=>i,x:()=>d});var s=a(6540);const n={},r=s.createContext(n);function i(e){const o=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(r.Provider,{value:o},e.children)}}}]);