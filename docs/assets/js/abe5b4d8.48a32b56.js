"use strict";(self.webpackChunkciencia_computacao=self.webpackChunkciencia_computacao||[]).push([[8614],{76218:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"cursos/arquitetura-software/fundamentos-arq-soft/Object Orientation Programming","title":"Programa\xe7\xe3o Orientada \xe0 Objetos","description":"Como j\xe1 vimos bastante dessa parte na disciplina de programa\xe7\xe3o modular do tecn\xf3logo. Aqui vamos engatar a quinta marcha e passar bem r\xe1pido.","source":"@site/docs/03-cursos/03-arquitetura-software/02-fundamentos-arq-soft/02-Object Orientation Programming.md","sourceDirName":"03-cursos/03-arquitetura-software/02-fundamentos-arq-soft","slug":"/cursos/arquitetura-software/fundamentos-arq-soft/Object Orientation Programming","permalink":"/CC_site/docs/cursos/arquitetura-software/fundamentos-arq-soft/Object Orientation Programming","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Programa\xe7\xe3o Orientada \xe0 Objetos","position":2},"sidebar":"materiasSidebar","previous":{"title":"Introdu\xe7\xe3o","permalink":"/CC_site/docs/cursos/arquitetura-software/fundamentos-arq-soft/introducao"},"next":{"title":"Tickets","permalink":"/CC_site/docs/backlog"}}');var s=n(74848),a=n(28453);const r={title:"Programa\xe7\xe3o Orientada \xe0 Objetos",position:2},i=void 0,c={},d=[{value:"Principais Conceitos",id:"principais-conceitos",level:2}];function l(e){const o={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",section:"section",strong:"strong",sup:"sup",...(0,a.R)(),...e.components},{Details:n}=o;return n||function(e,o){throw new Error("Expected "+(o?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.admonition,{title:"Coment\xe1rio",type:"note",children:(0,s.jsxs)(o.p,{children:["Como j\xe1 vimos bastante dessa parte na disciplina de ",(0,s.jsx)(o.a,{href:"/CC_site/docs/puc/segundo-periodo/programacao-modular",children:"programa\xe7\xe3o modular"})," do tecn\xf3logo. Aqui vamos engatar a quinta marcha e passar bem r\xe1pido."]})}),"\n",(0,s.jsx)(o.h2,{id:"principais-conceitos",children:"Principais Conceitos"}),"\n",(0,s.jsx)(o.admonition,{title:"Aviso",type:"warning",children:(0,s.jsxs)(o.p,{children:["N\xe3o saia dessa se\xe7\xe3o sem ",(0,s.jsx)(o.strong,{children:"decorar"})," cada um dos conceitos que vamos elencar aqui."]})}),"\n",(0,s.jsx)(o.p,{children:'A principal meta de qualquer implementa\xe7\xe3o OOP \xe9, basicamente, "reduzir acoplamento e aumentar coes\xe3o". Pois bem, vamos definir cada um desses pontos.'}),"\n",(0,s.jsxs)(o.blockquote,{children:["\n",(0,s.jsxs)(o.p,{children:["Podemos definir ",(0,s.jsx)(o.strong,{children:"Acoplamento"})," como a depend\xeancia entre objetos, ou seja, se um deles for alterado, os objetos dependentes tamb\xe9m sofrer\xe3o mudan\xe7as."]}),"\n"]}),"\n",(0,s.jsxs)(o.blockquote,{children:["\n",(0,s.jsxs)(o.p,{children:["Chamamos de ",(0,s.jsx)(o.strong,{children:"Coes\xe3o"}),' o oposto do acoplamento. Onde objetos podem trabalhar livremente lado a lado de modo que os componentes do sistema sejam livres para mudar e evoluir enquanto "servem" seus m\xe9todos e procedimentos uns para os outros.']}),"\n"]}),"\n",(0,s.jsxs)(o.blockquote,{children:["\n",(0,s.jsxs)(o.p,{children:["Chamamos de ",(0,s.jsx)(o.strong,{children:"Classe"})," a declara\xe7\xe3o de um objeto  com propriedades. Por sua vez, um ",(0,s.jsx)(o.strong,{children:"Objeto"})," \xe9 a instancia\xe7\xe3o da classe alocada na mem\xf3ria que ser\xe1 utilizada em tempo de execu\xe7\xe3o."]}),"\n"]}),"\n",(0,s.jsxs)(o.blockquote,{children:["\n",(0,s.jsxs)(o.p,{children:["Chamamos de ",(0,s.jsx)(o.strong,{children:"Estado"})," as propriedades contidas em um determinado objeto. Por sua vez, chamamos de ",(0,s.jsx)(o.strong,{children:"Comportamento"})," as fun\xe7\xf5es e procedimentos contidos em um objeto"]}),"\n"]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"Exemplo de Estado e Comportamento"}),(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-cs",children:"namespace AulaConceitos\n{\n\tpublic class Objeto\n\t{\n\t\tpublic string Estado1 { get; set; }\n\t\tpublic int Estado2 { get; set; }\n\n\t\tpublic int Comportamento1(int param1, int param2)\n\t\t{\n\t\t\tint result;\n\t\t\t// logica do comportamento\n\t\t\treturn result;\n\t\t}\n\n\t\t// Aqui temos um exemplo de um Comportamento que altera um Estado\n\t\tpublic void AtualizaEstado1(string novoValor)\n\t\t{\n\t\t\tEstado1 = novoValor;\n\t\t}\n\t}\n}\n"})})]}),"\n",(0,s.jsxs)(o.blockquote,{children:["\n",(0,s.jsxs)(o.p,{children:["Chamamos de ",(0,s.jsx)(o.strong,{children:"Heran\xe7a"})," ",(0,s.jsx)(o.sup,{children:(0,s.jsx)(o.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})," a capacidade de passagem de estados e comportamento entre classes. Nem sempre, o seu uso \xe9 aconselhado."]}),"\n"]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"Exemplo de Heran\xe7a"}),(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-cs",metastring:"showLineNumbers",children:"namespace AulaConceitos\n{\n\tpublic class ObjetoPai\n\t{\n\t\tpublic string Estado1 { get; set; }\n\t\tpublic int Estado2 { get; set; }\n\n\t\tpublic int Comportamento1(int param1, int param2)\n\t\t{\n\t\t\tint result;\n\t\t\t// logica do comportamento\n\t\t\treturn result;\n\t\t}\n\n\t\t// Aqui temos um exemplo de um Comportamento que altera um Estado\n\t\tpublic void AtualizaEstado1(string novoValor)\n\t\t{\n\t\t\tEstado1 = novoValor;\n\t\t}\n\t}\n\t\n\tpublic class ObjetoFilho : ObjetoPai\n\t{\n\t\tpublic string EstadoFilho1 { get; set; }\n\t\tpublic string EstadoFilho2 { get; set; }\n\t\t\n\t\tpublic int ComportamentoFilho1(int param1)\n\t\t{\n\t\t\tint result;\n\t\t\t// logica do comportamento\n\t\t\treturn result;\n\t\t} \n\t}\n}\n"})}),(0,s.jsxs)(o.p,{children:["No exemplo acima, o comando ",(0,s.jsx)(o.code,{children:"ObjetoFilho.Estado1"})," seria v\xe1lido porque o estado da superclasse \xe9 herdado pela classe filha."]})]}),"\n",(0,s.jsxs)(o.blockquote,{children:["\n",(0,s.jsxs)(o.p,{children:["Chamamos de ",(0,s.jsx)(o.strong,{children:"Abstra\xe7\xe3o"})," a capacidade de planejarmos (principalmente super classes) estados e comportamentos de modo que criamos as classes sem necessariamente implementar seus comportamentos."]}),"\n"]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"Exemplo de Abstra\xe7\xe3o"}),(0,s.jsx)(o.admonition,{type:"warning",children:(0,s.jsxs)(o.p,{children:["Classes abstratas ",(0,s.jsx)(o.strong,{children:"n\xe3o"})," podem ser instanciadas. Elas sempre precisam ser herdadas para que seja feito o ",(0,s.jsx)(o.strong,{children:"polimorfismo"}),(0,s.jsx)(o.sup,{children:(0,s.jsx)(o.a,{href:"#user-content-fn-2",id:"user-content-fnref-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"2"})}),"."]})}),(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-cs",children:"namespace AulaConceitos\n{\n\tpublic abstract class ClasseAbstrata\n\t{\n\t\tprivate readonly int _param1;\n\n\t\tpublic ClasseAbstrata(int param)\n\t\t{\n\t\t\t_param1 = param;\n\t\t}\n\n\t\t// Aqui eu defino que a classe do tipo ClasseAbstrata \n\t\t// sempre vai ter os comportamentos 1 e 2 mesmo sem\n\t\t// definir o que esses caras fazem (isso vai ser posto na classe filha)\n\t\tpublic abstract Comportamento1();\n\t\tpublic abstract Comportamento2();\n\t}\n}\n"})})]}),"\n",(0,s.jsxs)(o.blockquote,{children:["\n",(0,s.jsxs)(o.p,{children:["Chamamos de ",(0,s.jsx)(o.strong,{children:"Polimorfismo"})," a capacidade de mudan\xe7a que uma classe filha pode ter em rela\xe7\xe3o \xe0 classe herdada. Existem 2 tipos: De Inclus\xe3o e Param\xe9trico."]}),"\n"]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"Exemplos de Polimorfismo"}),(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-cs",children:"public abstract class ClassePolimorfismoDeInclusao\n{\n\tpublic ClassePolimorfismo() {}\n\n\t// Esse m\xe9todo obrigatoriamente precisa receber override (polimorfismo de inclusao)\n\tpublic abstract void ComportamentoAbstrato()\n\n\t// Esse m\xe9todo possui uma l\xf3gica padr\xe3o mas permite override \n\t// (outro tipo de polimorfismo de inclus\xe3o)\n\tpublic virtual void ComportamentoVirtual()\n\t{\n\t\t// l\xf3gica do void\n\t}\n\n}\n"})}),(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-cs",children:'using System;\n\nnamespace ExemploPolimorfismoParametrico {\n    // criacao da classe generica\n    // o termo "param\xe9trico" vem justamente do fato que essa classe recebe \n    // qualquer tipo de objeto no par\xe2metro <T> \n    public class Conjuntos <T> { \n        // criacao de uma funcao como membro estatico\n        // que retorna um booleano para os vetores "s" e "w"\n        // do tipo de dado definido por "<T>"\n        public static bool disjuntos(T[] s, T[] w)\n        {\n        // loop em todos os elementos do vetor "s"\n        for (int i = 0; i < s.Length; i++)\n        {\n            // loop em todos so elementos do vetor "w"\n            for (int j = 0; j < w.Length; j++)\n            {\n                // Teste: O elemento s[i] \xe9 igual ao w[j]?\n                // se sim, eles possuem algum elemento em comum\n                // logo, nao sao conjuntos disjuntos!\n                if (s[i].Equals(w[j]))\n                    return false;\n            }\n        }\n        // se nenhum dos elementos dos dois conjuntos\n        // for igual ao do outro, entao sao conjuntos\n        // disjuntos!\n        return true;\n        }\n    }\n    // Programa Principal\n    class MainClass {\n        public static void Main(string[] args) {\n            if (Conjuntos<int>.disjuntos(new int[] {1,3,5}, new int[] {2,4,6}))\n            {\n                Console.WriteLine("Conjuntos Disjuntos!");\n            } else\n            {\n                Console.WriteLine("conjuntos n\xe3o Disjuntos!");\n            }\n        }\n    }\n}\n'})})]}),"\n",(0,s.jsxs)(o.blockquote,{children:["\n",(0,s.jsxs)(o.p,{children:["Chamamos de ",(0,s.jsx)(o.strong,{children:"Encapsulamento"})," a gest\xe3o da exposi\xe7\xe3o dos m\xe9todos das classes (sendo p\xfablicos ou privados) atrav\xe9s dos ",(0,s.jsx)(o.a,{href:"../../../../blog/modificadores-acesso-csharp",children:"modificadores de acesso"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"Exemplo de Encapsulamento"}),(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-cs",children:"public class ExemploEncapsulamento\n{\n  private string EstadoPrivado1 { get; set; }\n  \n  public SetEstadoPrivado1(string valor)\n  {\n    EstadoPrivado1 = valor; // define valor privado\n  }\n  \n  public string GetEstadoPrivado1()\n  {\n    return EstadoPrivado1; // retorna valor privado\n  }\n}\n"})})]}),"\n","\n",(0,s.jsxs)(o.section,{"data-footnotes":!0,className:"footnotes",children:[(0,s.jsx)(o.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{id:"user-content-fn-1",children:["\n",(0,s.jsxs)(o.p,{children:["Provavelmente o conceito mais importante da OOP. ",(0,s.jsx)(o.a,{href:"#user-content-fnref-1","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,s.jsxs)(o.li,{id:"user-content-fn-2",children:["\n",(0,s.jsxs)(o.p,{children:["N\xf3s vimos esse conceito na aula de Programa\xe7\xe3o Modular. ",(0,s.jsx)(o.a,{href:"#user-content-fnref-2","data-footnote-backref":"","aria-label":"Back to reference 2",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function m(e={}){const{wrapper:o}={...(0,a.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,o,n)=>{n.d(o,{R:()=>r,x:()=>i});var t=n(96540);const s={},a=t.createContext(s);function r(e){const o=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:o},e.children)}}}]);